#!/usr/bin/python
from mdv.sec.sekt import SektCommand

class Kreleases(SektCommand):

    descr = "list all kernel releases"

    def init_parser(self, parser):
        super(Kreleases, self).init_parser(parser)
        parser.add_option("-l", "--latest", action="store_true",
                default=False,
                help="only show most recent stable releases")

    def run(self):
        def split(ver):
            return [int(x) for x in ver.split(".")], ver
        releases = [split(ver) for ver in
                self.tasks.list_kernel_releases()]
        if self.opts.latest:
            pairs = []
            release = None
            stable = None
            for split, ver in sorted(releases):
                if len(split) == 3:
                    if stable:
                        pairs.append((release, stable))
                    release = ver
                    stable = None
                elif len(split) >= 4:
                    stable = ver
            if release:
                pairs.append((release, stable))
            for release, stable in pairs:
                print release, "=>",
                print stable or ""
        else:
            for split, ver in sorted(releases):
                print ver

Kreleases().main()

# vim:ts=4:sw=4:et
